#!/bin/bash
#############################################################################
#  Copyright (C) 2013-2015 Lawrence Livermore National Security, LLC.
#  Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
#  Written by Albert Chu <chu11@llnl.gov>
#  LLNL-CODE-644248
#  
#  This file is part of Magpie, scripts for running Hadoop on
#  traditional HPC systems.  For details, see https://github.com/llnl/magpie.
#  
#  Magpie is free software; you can redistribute it and/or modify it
#  under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#  
#  Magpie is distributed in the hope that it will be useful, but
#  WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#  General Public License for more details.
#  
#  You should have received a copy of the GNU General Public License
#  along with Magpie.  If not, see <http://www.gnu.org/licenses/>.
#############################################################################

# This script sets up configuration files for jobs.  For the most
# part, it shouldn't be editted.  See job submission files for
# configuration details.

if [ "${TACHYON_SETUP}" != "yes" ]
then
    exit 0
fi

source ${MAGPIE_SCRIPTS_HOME}/magpie/exports/magpie-exports-dirs
source ${MAGPIE_SCRIPTS_HOME}/magpie/exports/magpie-exports-user
source ${MAGPIE_SCRIPTS_HOME}/magpie/lib/magpie-lib-defaults
source ${MAGPIE_SCRIPTS_HOME}/magpie/lib/magpie-lib-node-identification
source ${MAGPIE_SCRIPTS_HOME}/magpie/lib/magpie-lib-setup
source ${MAGPIE_SCRIPTS_HOME}/magpie/lib/magpie-lib-paths

# tachyonnoderank set if succeed
if ! Magpie_am_I_a_tachyon_node
then
    exit 0
fi

if [ "${HADOOP_SETUP}" == "yes" ]
then
    tachyonhadoopcmd="${HADOOP_HOME}/${hadoopcmdprefix}/hadoop"
fi

IFSORIG=${IFS}
IFS=","
tachyonstorepaths=""
for tachyonstorefile in ${TACHYON_STORE_PATHS}
do
    tachyonstorefiletmp=${tachyonstorefile}
    tachyonstorepathstmp=`echo "${tachyonstorefiletmp}" | sed "s/\\//\\\\\\\\\//g"`
    
    if [ ! -d "${tachyonstorefiletmp}" ]
    then
        mkdir -p ${tachyonstorefiletmp}
        if [ $? -ne 0 ] ; then
            echo "mkdir failed making ${tachyonstorefiletmp}"
            exit 1
        fi
    fi
    
    tachyonstorepaths="${tachyonstorepaths}${tachyonstorepaths:+","}${tachyonstorepathstmp}"
done
IFS=${IFSORIG}

if [ "${TACHYON_STORE_QUOTA}X" != "X" ]
then
    tachyonstorequota="${TACHYON_STORE_QUOTA}GB"
else
    tachyonstorequota="100GB"
fi

# sets magpie_hadooptmpdir and magpie_fsdefault
Magpie_calculate_hadoop_filesystem_paths ${tachyonnoderank}
tachyonunderfsaddress="${magpie_fsdefault}"

if [ "${TACHYON_JOURNAL_FOLDER}X" != "X" ]
then
    tachyonjournalfolder=${TACHYON_JOURNAL_FOLDER}
else
    tachyonjournalfolder="${TACHYON_LOCAL_DIR}/journal/"
fi

if [ "${TACHYON_ASYNCHRONOUS_WRITES}" == "yes" ]
then
    tachyonasyncenable="true"
    tachyonwritetypedefault="ASYNC_THROUGH"
else
    tachyonasyncenable="false"
    tachyonwritetypedefault="CACHE_THROUGH"
fi

# Sets magpie_openfilescount
Magpie_calculate_openfiles ${TACHYON_SLAVE_COUNT}
# Sets magpie_magpie_userprocessescount
Magpie_calculate_userprocesses ${TACHYON_SLAVE_COUNT}

#
# Get config files for setup
#

# Magpie_find_conffile will set the 'pre' filenames
Magpie_find_conffile "Tachyon" ${TACHYON_CONF_FILES:-""} "tachyon-env.sh" "pre_tachyonenvsh"
Magpie_find_conffile "Tachyon" ${TACHYON_CONF_FILES:-""} "tachyon.log4j.properties" "pre_log4jproperties"

post_tachyonenvsh=${TACHYON_CONF_DIR}/tachyon-env.sh
post_log4jproperties=${TACHYON_CONF_DIR}/log4j.properties

#
# Setup Tachyon configuration files and environment files
#

javahomesubst=`echo "${JAVA_HOME}" | sed "s/\\//\\\\\\\\\//g"`
hadoopconfdirsubst=`echo "${HADOOP_CONF_DIR}" | sed "s/\\//\\\\\\\\\//g"`
hadoophomesubst=`echo "${HADOOP_HOME}" | sed "s/\\//\\\\\\\\\//g"`
tachyonhadoopcmdsubst=`echo "${tachyonhadoopcmd}" |  sed "s/\\//\\\\\\\\\//g"`

tachyonhomesubst=`echo "${TACHYON_HOME}" | sed "s/\\//\\\\\\\\\//g"`
tachyonlocaldirsubst=`echo "${TACHYON_LOCAL_DIR}" | sed "s/\\//\\\\\\\\\//g"`
tachyonconfdirsubst=`echo "${TACHYON_CONF_DIR}" | sed "s/\\//\\\\\\\\\//g"`
tachyonlogdirsubst=`echo "${TACHYON_LOG_DIR}" | sed "s/\\//\\\\\\\\\//g"`
tachyonunderfsaddresssubst=`echo "${tachyonunderfsaddress}" | sed "s/\\//\\\\\\\\\//g"`
tachyonjournalfoldersubst=`echo "${tachyonjournalfolder}" | sed "s/\\//\\\\\\\\\//g"`

cp ${pre_tachyonenvsh} ${post_tachyonenvsh}

sed -i \
    -e "s/TACHYON_JAVA_HOME/${javahomesubst}/g" \
    -e "s/HADOOPCONFDIR/${hadoopconfdirsubst}/g" \
    -e "s/HADOOPHOME/${hadoophomesubst}/g" \
    -e "s/TACHYONHADOOPCMD/${tachyonhadoopcmdsubst}/g" \
    -e "s/TACHYONHOME/${tachyonhomesubst}/g" \
    -e "s/TACHYONLOCALDIR/${tachyonlocaldirsubst}/g" \
    -e "s/TACHYONCONFDIR/${tachyonconfdirsubst}/g" \
    -e "s/TACHYONLOGDIR/${tachyonlogdirsubst}/g" \
    -e "s/TACHYONMASTERADDRESS/${TACHYON_MASTER_NODE}/g" \
    -e "s/TACHYONMASTERPORT/${default_tachyon_master_port}/g" \
    -e "s/TACHYONMASTERWEBPORT/${default_tachyon_master_web_port}/g" \
    -e "s/TACHYONWORKERPORT/${default_tachyon_worker_port}/g" \
    -e "s/TACHYONWORKERDATAPORT/${default_tachyon_worker_data_port}/g" \
    -e "s/TACHYONHIERARCHYSTORETYPE/${TACHYON_STORE_TYPE}/g" \
    -e "s/TACHYONHIERARCHYSTOREPATHS/${tachyonstorepaths}/g" \
    -e "s/TACHYONHIERARCHYSTOREQUOTA/${tachyonstorequota}/g" \
    -e "s/TACHYONWORKERMEMORYSIZE/${tachyonstorequota}/g" \
    -e "s/TACHYONUNDERFSADDRESS/${tachyonunderfsaddresssubst}/g" \
    -e "s/TACHYONJOURNALFOLDER/${tachyonjournalfoldersubst}/g" \
    -e "s/TACHYONASYNCENABLE/${tachyonasyncenable}/g" \
    -e "s/TACHYONWRITETYPEDEFAULT/${tachyonwritetypedefault}/g" \
    ${post_tachyonenvsh}

if [ "${MAGPIE_REMOTE_CMD:-ssh}" != "ssh" ]
then
    echo "export TACHYON_SSH_CMD=\"${MAGPIE_REMOTE_CMD}\"" >> ${post_tachyonenvsh}
fi
if [ "${MAGPIE_REMOTE_CMD_OPTS}X" != "X" ]
then
    echo "export TACHYON_SSH_OPTS=\"${MAGPIE_REMOTE_CMD_OPTS}\"" >> ${post_tachyonenvsh}
fi

if [ "${TACHYON_ENVIRONMENT_EXTRA_PATH}X" != "X" ] && [ -f ${TACHYON_ENVIRONMENT_EXTRA_PATH} ]
then
    cat ${TACHYON_ENVIRONMENT_EXTRA_PATH} >> ${post_tachyonenvsh}
else
    echo "ulimit -n ${magpie_openfilescount} &> /dev/null" >> ${post_tachyonenvsh}
    echo "ulimit -u ${magpie_userprocessescount} &> /dev/null" >> ${post_tachyonenvsh}
fi

cp ${pre_log4jproperties} ${post_log4jproperties}

sed -i \
    -e "s/TACHYONLOGDIR/${tachyonlogdirsubst}/g" \
    ${post_log4jproperties}

exit 0
