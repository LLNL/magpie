#!/bin/bash
#############################################################################
#  Copyright (C) 2013-2015 Lawrence Livermore National Security, LLC.
#  Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
#  Written by Albert Chu <chu11@llnl.gov>
#  LLNL-CODE-644248
#  
#  This file is part of Magpie, scripts for running Hadoop on
#  traditional HPC systems.  For details, see https://github.com/llnl/magpie.
#  
#  Magpie is free software; you can redistribute it and/or modify it
#  under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#  
#  Magpie is distributed in the hope that it will be useful, but
#  WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#  General Public License for more details.
#  
#  You should have received a copy of the GNU General Public License
#  along with Magpie.  If not, see <http://www.gnu.org/licenses/>.
#############################################################################

# These are functions to be called by magpie-run

source ${MAGPIE_SCRIPTS_HOME}/magpie/exports/magpie-exports-submission-type
source ${MAGPIE_SCRIPTS_HOME}/magpie/exports/magpie-exports-dirs
source ${MAGPIE_SCRIPTS_HOME}/magpie/exports/magpie-exports-user
source ${MAGPIE_SCRIPTS_HOME}/magpie/lib/magpie-lib-defaults
source ${MAGPIE_SCRIPTS_HOME}/magpie/lib/magpie-lib-node-identification
source ${MAGPIE_SCRIPTS_HOME}/magpie/lib/magpie-lib-run
source ${MAGPIE_SCRIPTS_HOME}/magpie/lib/magpie-lib-log

# Return 0 if service up, 1 if not
__Magpie_run_check_zookeeper_up () {
    cd ${ZOOKEEPER_HOME}
    
    if ! type nc >/dev/null 2>&1
    then
        echo "Checking if zookeeper came up failed because netcat ('nc' command) was not found. Assuming success."
        return 0
    else 
        local zookeepernodes=`cat ${ZOOKEEPER_CONF_DIR}/workers`
        for zookeepernode in ${zookeepernodes}
        do
            local zookeeperresponse=`echo ruok | nc ${zookeepernode} ${default_zookeeper_client_port}`
            if [ "${zookeeperresponse}" != "imok" ]
            then
                return 1
            fi
        done
        
        return 0
    fi  
    
    return 1
}

Magpie_run_start_zookeeper () {

    if [ "${ZOOKEEPER_SETUP}" == "yes" ] && [ "${magpie_run_prior_startup_successful}" == "true" ]
    then
        if [ "${MAGPIE_JOB_TYPE}" != "setuponly" ]
        then
            # Make variables unspecified for launching
            Magpie_make_all_local_dirs_unspecified

            echo "Starting Zookeeper"
            ${MAGPIE_SCRIPTS_HOME}/bin/magpie-zookeeper-start-all.sh

            # Make variables specific now within Magpie
            Magpie_make_all_local_dirs_node_specific

            # My rough estimate for setup time is 30 seconds per 128 nodes
            local sleepwait=`expr ${ZOOKEEPER_REPLICATION_COUNT} \/ 128 \* 30`
            if [ ${sleepwait} -lt 30 ]
            then
                sleepwait=30
            fi
            echo "Waiting ${sleepwait} seconds to allow Zookeeper daemons to setup"
            sleep ${sleepwait}
            magpie_run_total_sleep_wait=`expr ${magpie_run_total_sleep_wait} + ${sleepwait}`
        fi

        echo "*******************************************************"
        echo "*"
        echo "* Zookeeper Information"
        echo "*"
        if [ "${MAGPIE_JOB_TYPE}" == "setuponly" ]
        then
            echo "* To setup, you probably want to run:" 
            echo "*"
            echo "*   ${MAGPIE_REMOTE_CMD:-ssh}${MAGPIE_REMOTE_CMD_OPTS:+" "}${MAGPIE_REMOTE_CMD_OPTS} ${ZOOKEEPER_MASTER_NODE}"
            if echo $MAGPIE_SHELL | grep -q csh
            then
                echo "*   setenv JAVA_HOME \"${JAVA_HOME}\""
                echo "*   setenv ZOOKEEPER_HOME \"${ZOOKEEPER_HOME}\""
                echo "*   setenv ZOOCFGDIR \"${ZOOKEEPER_CONF_DIR}\""
            else
                echo "*   export JAVA_HOME=\"${JAVA_HOME}\""
                echo "*   export ZOOKEEPER_HOME=\"${ZOOKEEPER_HOME}\""
                echo "*   export ZOOCFGDIR=\"${ZOOKEEPER_CONF_DIR}\""
            fi
            echo "*   $MAGPIE_SCRIPTS_HOME/bin/magpie-zookeeper-start-all.sh"
            echo "*" 
            echo "* To end/cleanup your session & kill all daemons, login and set"
            echo "* environment variables per the instructions above, then run:"
            echo "*" 
            echo "*   $MAGPIE_SCRIPTS_HOME/bin/magpie-zookeeper-stop-all.sh"
            echo "*" 
        fi
        if [ "${MAGPIE_ENVIRONMENT_VARIABLE_SCRIPT}X" != "X" ]
        then
            echo "* If running interactively, sourcing"
            echo "*"
            echo "* ${MAGPIE_ENVIRONMENT_VARIABLE_SCRIPT}"
            echo "*"
            echo "* will set most common environment variables for your job."
            echo "*"
        fi
        echo "*******************************************************"

        if [ "${MAGPIE_ENVIRONMENT_VARIABLE_SCRIPT}X" != "X" ]
        then
            if echo $MAGPIE_SHELL | grep -q csh
            then
                echo "setenv ZOOKEEPER_HOME \"${ZOOKEEPER_HOME}\"" >> ${MAGPIE_ENVIRONMENT_VARIABLE_SCRIPT}
                echo "setenv ZOOCFGDIR \"${ZOOKEEPER_CONF_DIR}\"" >> ${MAGPIE_ENVIRONMENT_VARIABLE_SCRIPT}
                echo "setenv ZOOKEEPER_CONF_DIR \"${ZOOKEEPER_CONF_DIR}\"" >> ${MAGPIE_ENVIRONMENT_VARIABLE_SCRIPT}
                echo "setenv ZOOKEEPER_LOG_DIR \"${ZOOKEEPER_LOG_DIR}\"" >> ${MAGPIE_ENVIRONMENT_VARIABLE_SCRIPT}
                echo "setenv ZOOKEEPER_NODES \"${ZOOKEEPER_NODES}\"" >> ${MAGPIE_ENVIRONMENT_VARIABLE_SCRIPT}
                echo "setenv ZOOKEEPER_NODES_FIRST \"${ZOOKEEPER_NODES_FIRST}\"" >> ${MAGPIE_ENVIRONMENT_VARIABLE_SCRIPT}
            else
                echo "export ZOOKEEPER_HOME=\"${ZOOKEEPER_HOME}\"" >> ${MAGPIE_ENVIRONMENT_VARIABLE_SCRIPT}
                echo "export ZOOCFGDIR=\"${ZOOKEEPER_CONF_DIR}\"" >> ${MAGPIE_ENVIRONMENT_VARIABLE_SCRIPT}
                echo "export ZOOKEEPER_CONF_DIR=\"${ZOOKEEPER_CONF_DIR}\"" >> ${MAGPIE_ENVIRONMENT_VARIABLE_SCRIPT}
                echo "export ZOOKEEPER_LOG_DIR=\"${ZOOKEEPER_LOG_DIR}\"" >> ${MAGPIE_ENVIRONMENT_VARIABLE_SCRIPT}
                echo "export ZOOKEEPER_NODES=\"${ZOOKEEPER_NODES}\"" >> ${MAGPIE_ENVIRONMENT_VARIABLE_SCRIPT}
                echo "export ZOOKEEPER_NODES_FIRST=\"${ZOOKEEPER_NODES_FIRST}\"" >> ${MAGPIE_ENVIRONMENT_VARIABLE_SCRIPT}
            fi
            echo "" >> ${MAGPIE_ENVIRONMENT_VARIABLE_SCRIPT}
        fi
        
        if [ ${MAGPIE_JOB_TYPE} != "setuponly" ]
        then
            # Return 0 if service up, 1 if not
            Magpie_check_service_up "Zookeeper" "__Magpie_run_check_zookeeper_up"
            
            if [ $? -eq 0 ]
            then
                magpie_run_zookeeper_should_be_torndown=1
                magpie_run_zookeeper_setup_successful=1
            else
                magpie_run_zookeeper_should_be_torndown=1
                magpie_run_zookeeper_setup_successful=0
                magpie_run_prior_startup_successful=false
            fi
        else
            magpie_run_zookeeper_should_be_torndown=1
            magpie_run_zookeeper_setup_successful=1
        fi
    else
        magpie_run_zookeeper_should_be_torndown=0
        magpie_run_zookeeper_setup_successful=1
    fi
}

Magpie_run_zookeeper () {
    if [ "${ZOOKEEPER_JOB}" == "zookeeperruok" ]
    then
        echo "*******************************************************"
        echo "* Running Zookeeper ruok"
        echo "*******************************************************"
        ${MAGPIE_SCRIPTS_HOME}/magpie/run/magpie-run-execute script ${MAGPIE_SCRIPTS_HOME}/magpie/job/magpie-job-zookeeper-zookeeperruok &
        local scriptpid=$!
        Magpie_wait_script_sigusr2_on_job_timeout ${scriptpid}
    else
        Magpie_output_internal_error "ZOOKEEPER_JOB = ${ZOOKEEPER_JOB} not handled"
    fi
}

Magpie_run_stop_zookeeper () {
    if [ "${ZOOKEEPER_SETUP}" == "yes" ] && [ "${magpie_run_zookeeper_should_be_torndown}" == "1" ]
    then
        if [ "${MAGPIE_JOB_TYPE}" != "setuponly" ]
        then
            # Make variables unspecified for shutdown
            Magpie_make_all_local_dirs_unspecified
            
            echo "Stopping Zookeeper"
            ${MAGPIE_SCRIPTS_HOME}/bin/magpie-zookeeper-stop-all.sh
            
            # Make variables specific now within Magpie
            Magpie_make_all_local_dirs_node_specific
        fi
    fi
    magpie_run_zookeeper_teardown_complete=1
}
